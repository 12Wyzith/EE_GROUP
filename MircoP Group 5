#include <Arduino.h>
#include <Wire.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>
#include <WiFi.h>
#include <HTTPClient.h>
#include <WiFiClient.h>  


#define SOUND_SENSOR_PIN 34  // Using a potentiometer to simulate sound sensor
#define BUZZER_PIN 26        // Buzzer for alert
#define NOISE_THRESHOLD 60   // Threshold in dB for alert

// OLED Display settings
#define SCREEN_WIDTH 128
#define SCREEN_HEIGHT 64
Adafruit_SSD1306 display(SCREEN_WIDTH, SCREEN_HEIGHT, &Wire, -1);

// WiFi Credentials
const char* ssid = "Wokwi-GUEST";
const char* password = "";        
const char* server = "http://api.thingspeak.com/update?api_key=LC3VAKERDWOTKGV8";

void setup() {
    Serial.begin(115200);
    pinMode(SOUND_SENSOR_PIN, INPUT);
    pinMode(BUZZER_PIN, OUTPUT);

    // Initialize OLED Display
    if (!display.begin(SSD1306_SWITCHCAPVCC, 0x3C)) {
        Serial.println("OLED initialization failed");
        while (1);
    }
    display.clearDisplay();
    display.setTextSize(1);
    display.setTextColor(WHITE);
    
    // Connect to WiFi
    WiFi.begin(ssid, password);
    Serial.print("Connecting to WiFi");
    while (WiFi.status() != WL_CONNECTED) {
        delay(500);
        Serial.print(".");
    }
    Serial.println("Connected!");
}

void loop() {
    int sensorValue = analogRead(SOUND_SENSOR_PIN);
    float noiseLevel = map(sensorValue, 0, 4095, 30, 100); // Convert potentiometer value to dB range

    Serial.print("Noise Level: ");
    Serial.print(noiseLevel);
    Serial.println(" dB");

    // Display on OLED
    display.clearDisplay();
    display.setCursor(0, 10);
    display.print("Noise: ");
    display.print(noiseLevel);
    display.print(" dB");
    display.display();
    
    // Trigger Alert if Noise Exceeds Threshold
    if (noiseLevel > NOISE_THRESHOLD) {
    Serial.println("Buzzer ON: Noise Too High!");
    tone(BUZZER_PIN, 1000);
    } 
    else {
    Serial.println("Buzzer OFF: Noise Normal");
    noTone(BUZZER_PIN);
    }

    
    // Send Data to IoT Platform
    if (WiFi.status() == WL_CONNECTED) {
        HTTPClient http;
        String url = String(server) + "&field1=" + String(noiseLevel);
        http.begin(url);
        int httpResponseCode = http.GET();
        http.end();
    }
    
    delay(2000); // Wait before next reading
}
